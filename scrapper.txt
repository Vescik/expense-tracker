package main

import (
	"encoding/csv"
	"fmt"
	"log"
	"os"

	"github.com/gocolly/colly"
)

type MacProd struct {
	image, name string
}

// initializing a data structure to keep the scraped data
func main() {
	var productList []MacProd
	c := colly.NewCollector()

	c.OnHTML("div.product_thumb", func(h *colly.HTMLElement) {
		prod := MacProd{}

		prod.name = h.ChildText("div.product_thumb-text")
		prod.image = h.ChildAttr("img", "src")

		productList = append(productList, prod)
	})
	c.OnRequest(func(r *colly.Request) {
		// print the url of that request
		fmt.Println("Visiting", r.URL)
	})
	c.OnResponse(func(r *colly.Response) {
		fmt.Println("Got a response from", r.Request.URL)
	})
	c.Visit("https://pyszne.pl")
	//fmt.Println(productList)


	/* 
	file, err := os.Create("menu.csv")
	if err != nil {
		log.Fatalln("Failed to create output CSV file", err)
	}
	defer file.Close()

	writer := csv.NewWriter(file)
	headers := []string{
		"name",
		"imageUrl",
		"price",
		"type",
		"size",
	}
	writer.Write(headers)
	for _, prod := range productList {
		insertData(prod.name, prod.image)
		record := []string{
			prod.name,
			prod.image,
		}
		writer.Write(record)
	}
	defer writer.Flush()
	//dbConnection()
*/

}
