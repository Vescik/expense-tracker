package main

import (
	"context"
	"database/sql"
	"fmt"
	"log"

	_ "github.com/denisenkom/go-mssqldb"
)

func dbConnection() {
	connString := fmt.Sprintf("server=%s;user id=%s;password=%s;port=%d;database=%s;",
		"127.0.0.1", "sa", "123", 1433, "CrispyScrap")

	db, err := sql.Open("mssql", connString)
	if err != nil {
		log.Fatal("Error creating connection pool: ", err.Error())
	} else {
		fmt.Print("Success")
	}
	defer db.Close()
	ctx := context.Background()
	err = db.PingContext(ctx)
	if err != nil {
		log.Fatal(err.Error())
	}
}

func insertData(name string, url string) {
	connString := fmt.Sprintf("server=%s;user id=%s;password=%s;port=%d;database=%s;",
		"127.0.0.1", "sa", "123", 1433, "CrispyScrap")

	db, err := sql.Open("mssql", connString)
	if err != nil {
		log.Fatal("Error creating connection pool: ", err.Error())
	}
	defer db.Close()

	ctx := context.Background()
	err = db.PingContext(ctx)
	if err != nil {
		log.Fatal("Error pinging database: ", err.Error())
	}

	tsql := `
INSERT INTO products (name, image)
SELECT ?, ?
WHERE NOT EXISTS (
    SELECT 1 FROM products WHERE name = ?
);`

	stmt, err := db.PrepareContext(ctx, tsql)
	if err != nil {
		log.Fatal("Error preparing SQL statement: ", err.Error())
	}
	defer stmt.Close()

	_, err = stmt.ExecContext(ctx, name, url, name)
	if err != nil {
		log.Fatal("Error inserting new row: ", err.Error())
	} else {
		fmt.Println("Row inserted!")
	}
}
